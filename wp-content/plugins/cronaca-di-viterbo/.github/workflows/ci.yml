name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feature/**', 'cursor/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  phpcs:
    name: PHP Coding Standards
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
      
      - name: Run PHPCS
        run: composer phpcs

  phpstan:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
      
      - name: Run PHPStan
        run: composer phpstan

  phpunit:
    name: PHPUnit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.0', '8.1', '8.2']
        wordpress: ['6.0', '6.4']
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
      
      - name: Setup WordPress test environment
        run: |
          bash bin/install-wp-tests.sh wordpress_test root '' localhost ${{ matrix.wordpress }}
      
      - name: Run PHPUnit
        run: composer test

  build:
    name: Build Plugin
    runs-on: ubuntu-latest
    needs: [phpcs, phpstan]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
      
      - name: Build for production
        run: composer build
      
      - name: Create release package
        run: |
          mkdir -p build
          rsync -av --exclude-from='.distignore' . build/cronaca-di-viterbo/
          cd build
          zip -r cronaca-di-viterbo-${{ github.sha }}.zip cronaca-di-viterbo/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cronaca-di-viterbo-build
          path: build/cronaca-di-viterbo-*.zip
          retention-days: 30

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
      
      - name: Security audit
        run: composer audit
